export const dynamic = 'force-dynamic'; // ‚¨ÖÔ∏è –∫–ª—é—á–µ–≤–∞—è —Å—Ç—Ä–æ–∫–∞

export async function POST(req: Request) {
  try {
    const { name, phone } = await req.json();

    const token = process.env.TELEGRAM_BOT_TOKEN;
    const chatId = process.env.TELEGRAM_CHAT_ID;

    if (!token || !chatId) {
      console.error('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è');
      return new Response('Missing env variables', { status: 500 });
    }

    const message = `
üöÄ *–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞*:
üë§ –ò–º—è: *${name}*
üìû –¢–µ–ª–µ—Ñ–æ–Ω: *${phone}*
`;

    const telegramResponse = await fetch(`https://api.telegram.org/bot${token}/sendMessage`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        chat_id: chatId,
        text: message,
        parse_mode: 'Markdown',
      }),
    });

    if (!telegramResponse.ok) {
      const errText = await telegramResponse.text();
      console.error('‚ùå –û—Ç–≤–µ—Ç –æ—Ç Telegram:', errText);
      return new Response('Telegram error', { status: 500 });
    }

    return new Response('ok', { status: 200 });
  } catch (e) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ route.ts:', e);
    return new Response('Internal Server Error', { status: 500 });
  }
}
